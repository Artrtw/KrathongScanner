using System;
using UnityEngine;
using System.IO;
using System.Collections;
using System.Collections.Generic;

public class ImageLoader : MonoBehaviour
{
    public string folderPath = "C:\\Users\\artro\\KrathongScanner\\Assets\\Scanned";
    public float checkInterval = 2f;     // ‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
    public float spawnCooldown = 7f;     // ‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏ô‡πà‡∏ß‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏Å‡∏£‡∏∞‡∏ó‡∏á‡∏ï‡πà‡∏≠‡∏≠‡∏±‡∏ô (‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)

    private HashSet<string> loadedFiles = new HashSet<string>();
    private Queue<string> spawnQueue = new Queue<string>(); // ‚úÖ ‡πÄ‡∏Å‡πá‡∏ö path ‡πÑ‡∏ß‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏¥‡∏ß

    void Start()
    {
        StartCoroutine(CheckFolderLoop());  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà
        StartCoroutine(SpawnLoop());        // ‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏Å‡∏£‡∏∞‡∏ó‡∏á‡∏ï‡∏≤‡∏°‡∏Ñ‡∏¥‡∏ß
    }

    // üîπ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà
    IEnumerator CheckFolderLoop()
    {
        while (true)
        {
            string[] files = Directory.GetFiles(folderPath, "*.png");

            foreach (string filePath in files)
            {
                if (!loadedFiles.Contains(filePath))
                {
                    Debug.Log("‡∏û‡∏ö‡∏£‡∏π‡∏õ‡πÉ‡∏´‡∏°‡πà: " + filePath);
                    loadedFiles.Add(filePath);

                    // ‚úÖ ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ñ‡∏¥‡∏ß ‡πÑ‡∏°‡πà spawn ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
                    spawnQueue.Enqueue(filePath);
                }
            }

            yield return new WaitForSeconds(checkInterval);
        }
    }

    // üîπ Spawn ‡∏Å‡∏£‡∏∞‡∏ó‡∏á‡∏ï‡∏≤‡∏°‡∏Ñ‡∏¥‡∏ß
    IEnumerator SpawnLoop()
    {
        while (true)
        {
            if (spawnQueue.Count > 0)
            {
                string filePath = spawnQueue.Dequeue();

                Texture2D tex = LoadTexture(filePath);
                if (tex != null)
                {
                    Sprite sprite = ConvertToSprite(tex);
                    GameObject obj = CreatePrefabFromSprite(sprite);

                    // ‡∏ï‡∏±‡πâ‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á (‡∏™‡∏∏‡πà‡∏°‡∏ô‡∏¥‡∏î‡∏´‡∏ô‡πà‡∏≠‡∏¢)
                    obj.transform.position = new Vector3(
                        UnityEngine.Random.Range(-3f, 3f),
                        UnityEngine.Random.Range(-2f, 2f),
                        0
                    );

                    // ‡πÉ‡∏™‡πà‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô
                    StartCoroutine(FloatAnimation(obj));
                }

                // ‚úÖ ‡∏£‡∏≠ Cooldown ‡∏Å‡πà‡∏≠‡∏ô‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏≠‡∏±‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
                yield return new WaitForSeconds(spawnCooldown);
            }
            else
            {
                // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà ‚Üí ‡∏£‡∏≠ 0.5 ‡∏ß‡∏¥ ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏µ‡∏Å‡∏ó‡∏µ
                yield return new WaitForSeconds(0.5f);
            }
        }
    }

    // ================= Helper =================
    Texture2D LoadTexture(string filePath)
    {
        if (File.Exists(filePath))
        {
            byte[] fileData = File.ReadAllBytes(filePath);
            Texture2D tex = new Texture2D(2, 2);
            tex.LoadImage(fileData);
            return tex;
        }
        return null;
    }

    Sprite ConvertToSprite(Texture2D texture)
    {
        return Sprite.Create(
            texture,
            new Rect(0, 0, texture.width, texture.height),
            new Vector2(0.5f, 0.5f),
            100f
        );
    }

    GameObject CreatePrefabFromSprite(Sprite sprite)
    {
        GameObject obj = new GameObject("Kratong");

        // SpriteRenderer
        SpriteRenderer sr = obj.AddComponent<SpriteRenderer>();
        sr.sprite = sprite;
        sr.sortingOrder = 5;

        // Collider2D
        BoxCollider2D collider = obj.AddComponent<BoxCollider2D>();
        collider.isTrigger = false;

        // Animator
        Animator animator = obj.AddComponent<Animator>();
        animator.runtimeAnimatorController = Resources.Load<RuntimeAnimatorController>("KratongController");

        // Scale
        obj.transform.localScale = new Vector3(35f, 35f, 18f);

        return obj;
    }

    IEnumerator FloatAnimation(GameObject obj)
    {
        Animator animator = obj.GetComponent<Animator>();
        if (animator == null)
        {
            animator = obj.AddComponent<Animator>();
        }

        RuntimeAnimatorController controller = Resources.Load<RuntimeAnimatorController>("KratongController");
        if (controller != null)
        {
            animator.runtimeAnimatorController = controller;
        }
        else
        {
            Debug.LogWarning("‡∏´‡∏≤ Animator Controller ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡πÉ‡∏ô Resources!");
        }

        yield break;
    }
}
